<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <context:annotation-config />
    <context:component-scan base-package="org.arip.service" />
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="proxyDataSource" />
        <property name="typeAliasesPackage" value="org.arip.domain"/>
        <property name="mapperLocations" value="classpath*:org/arip/persistence/*.xml" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.arip.persistence" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="proxyDataSource" />
    </bean>

    <bean id="dataSourceRegistry" class="org.arip.util.DataSourceFactory"></bean>

    <bean id="dataSourceTargetSource" class="org.arip.util.ContextSwappableTargetSource">
        <constructor-arg type="java.lang.Class">
            <value>javax.sql.DataSource</value>
        </constructor-arg>
        <property name="targetRegistry" ref="dataSourceRegistry"></property>
    </bean>

    <bean id="proxyDataSource" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <list>
                <value>javax.sql.DataSource</value>
            </list>
        </property>
        <property name="targetSource">
            <ref bean="dataSourceTargetSource" />
        </property>
    </bean>

</beans>